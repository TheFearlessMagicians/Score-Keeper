<%include ./partials/header%>

    <div class="alert alert-danger">
        <strong>Less than 2 players entered!</strong>
    </div>
    <div class="container">
        <h1> Score Keeper </h1>
        <form id="initialForm" method="GET" action="/new">
            <div class="form-group">
                <label for="gameName" id="labelPlayer">Game: &nbsp; </label>
                <input type="text" name="gameName"> 
                <span>  &nbsp;  &nbsp;  &nbsp;  &nbsp; </span>
                <label for="numOfPlayers" id="labelPlayer">Players: &nbsp; </label>
                <input id="numOfPlayers" type="number" name="players">
                <button type="button" class="btn btn-default btn-lg" id="goBtn">Go!</button>
            </div>
        </form>
    </div>
    <hr>
    <div class="container" id="game">
              <div class="row">


        <h3 class="playersPlaying"></h3>

        <div id="RS" class="col-md-6">
            <div class="form-group">
                <label for="sel1">
                    <h3>Player: </h3></label>
                <select class="form-control" id="sel1">
                </select>
                <label for="points">
                    <h3>Points: </h3></label>
                <input id="points" type="number" name="p">
                <br>
                <button type="button" id='button-success' class="btn btn-success btn-lg">Score!</button>
            </div>
        </div>
        <div id="list" class="col-md-6">
                  <ul>

                  </ul>
        </div>
    </div>
</div>
<div class="container" id="ranking">
    <h4>Ranking Table</h4>
        <table class = "table table-stripped" id = "ranking">
           <thead>
               <th scope = "col">Rank</th>
               <th scope = "col">Player</th>
               <th scope = "col">Score</th>
           </thead>
           <tbody>
           </tbody>
        </table>
</div>

<script>
var gameState = "<%= gameState %>";
var playersData = <%- JSON.stringify(playersData) %>;
console.log(`mode now is ${gameState}`);
if (gameState == 'scoring') {

} else {
    $('#game').css("display", "none");
    $("div#ranking").css("display", "none");
}
$("button#goBtn").on('click', function(event) {
    // console.log('posted '+document.getElementById('numOfPlayers').value);
    $.post('/', {
        players: document.getElementById('numOfPlayers').value
    }, function(event) {
        //Post is broken here?


    });
    $("#game").css("display", "block");
    $("div#ranking").css("display", "block");
});


if (gameState == 'scoring') {
    console.log('going to scoring module');
    // this is already defined in index.ejs -> var playersData =<%- JSON.stringify(playersData) %>;
    init(playersData.length, playersData);
    alert.style.visibility = "hidden";
    alert.style.display = "none";
    document.getElementsByClassName("playersPlaying").innerHTML = "Players playing: " + playersData.length;
    $("form#initialForm").slideUp(40, () => {
        console.log('appending buttons.')
        $("ul li").append("<button  id=\"incrementScore\" class=\"incrementButtons\">+1</button>")
            .prepend("<button id=\"decrementScore\" class=\"incrementButtons\">-1</button>");
        $("li button#incrementScore").click(function() {
            let id = $(this).parent().attr("id")
            socket.emit('scoreUpdate', {
                'userId': id,
                'scoreUpdate': 1
            });
            scored(id, 1);
        });
        $("li button#decrementScore").click(function() {
            let id = $(this).parent().attr("id")
            socket.emit('scoreUpdate', {
                'userId': id,
                'scoreUpdate': -1
            });
            scored(id, -1);
        });
    });
} else {
    /* 2i. --------------Go Btn to start a game. ------------------*/
    document.getElementById('goBtn').addEventListener("click", function() {
        playerList = []
        if (Number(inputPlayers.value) <= 1) {
            // Alert the user that he/she has entered invalid value..
            alert.style.visibility = "visible";
            alert.style.display = "block";
        } else if (Number(inputPlayers.value) >= 2 /*&& alert.style.visibility == "visible"*/ ) {
            //NOTE: @ VARUN why must there be a && alert.style.visibility up here ^^ ???
            //What's the purpose? I commented it out cos i thought it was unnecessary.??
            alert.style.visibility = "hidden";
            alert.style.display = "none";
            document.getElementsByClassName("playersPlaying").innerHTML = "Players playing: " + inputPlayers.value;
            init(Number(inputPlayers.value));
            /*-------- Tell server that game has started */
            socket.emit('startScoring', {});

            /*--------Animation for the login thing to slide up, and functions for  scoring -----*/
            $("form#initialForm").slideUp(400, () => {
                console.log('appending buttons.')
                $("ul li").append("<button  id=\"incrementScore\" class=\"incrementButtons\">+1</button>")
                    .prepend("<button id=\"decrementScore\" class=\"incrementButtons\">-1</button>");
                $("li button#incrementScore").click(function() {
                    let id = $(this).parent().attr("id")
                    socket.emit('scoreUpdate', {
                        'userId': id,
                        'scoreUpdate': 1
                    });
                    scored(id, 1);
                });
                $("li button#decrementScore").click(function() {
                    let id = $(this).parent().attr("id")
                    socket.emit('scoreUpdate', {
                        'userId': id,
                        'scoreUpdate': -1
                    });
                    scored(id, -1);
                });
            });
        }
    });


}



</script>
<!-- socket-io scripts: -->

<script src = "/socket.io/socket.io.js" > </script>
 <script >
    var socket = io.connect("localhost:8000");
socket.on('connect', function() {
    console.log('connected to socket.')
    socket.on('scoreUpdate', function(data) {
        console.log('received score update from server.')
        let userId = data.userId;
        let scoreUpdate = data.scoreUpdate;
        scored(userId, scoreUpdate);

    });

});

</script>

<%include ./partials/footer%>
